install.packages("here")
install.packages("pagedown")
library(tidyverse)
library(lubridate)
library(knitr)
opts_chunk$set(echo = FALSE)
options(knitr.kable.NA = '')
#### cv entries #####
cv_entries <- readxl::read_xlsx(here::here("data", "cv_entries.xlsx"))
#### publications #####
pubs <- readxl::read_xlsx(here::here("data", "pubs.xlsx")) %>%
arrange(order) %>%
select(-order)
pubs <- map_df(pubs, ~gsub("\\.$", "", .x))
courses <- readxl::read_xlsx(here::here("data", "courses.xlsx"))
confs <- pubs %>%
filter(type == "conference") %>%
select(-type)
fa_doc <- ifelse(
!is.na(confs$full_paper_link),
paste0('[<i class="fas falink2 fa-file-alt"></i>](',
confs$full_paper_link,
")"
),
""
)
fa_git <- ifelse(
!is.na(confs$git_repo),
paste0('[<i class="fab falink2 fa-github"></i>](',
confs$git_repo,
")"
),
""
)
fa_pres <- ifelse(
!is.na(confs$slides_link),
paste0('[<i class="fas falink3 fa-chalkboard-teacher"></i>](',
confs$slides_link,
")"
),
""
)
each_cite <- split(confs, seq_len(nrow(confs)))
empties <- map(each_cite, ~map_lgl(.x, is.na))
cites <- map2(each_cite, empties, ~.x[ ,!.y])
formatted_cites <- map(cites, ~do.call(make_cite, .x))
View(confs)
View(pubs)
View(empties)
View(each_cite)
View(cv_entries)
View(courses)
View(confs)
View(cites)
View(pubs)
chapters <- pubs %>%
filter(type == "book-chapter") %>%
select(-type)
each_cite <- split(chapters, seq_len(nrow(chapters)))
empties <- map(each_cite, ~map_lgl(.x, is.na))
cites <- map2(each_cite, empties, ~.x[ ,!.y])
formatted_cites <- map(cites, ~do.call(make_cite, .x))
make_cite <- function(authors,	year,	title,	journal = NULL,	volume = NULL,
issue = NULL,	pages = NULL,	doi = NULL,	url = NULL,
book = NULL, place_published = NULL, conference = NULL,
poster = NULL, conf_loc = NULL, annual_meeting = NULL,
version = NULL,...) {
if(!is.null(journal)) {
journal <- paste0("*", journal, "*.")
}
if(!is.null(volume)) {
volume <- paste0("*", volume, "*,")
}
if(!is.null(issue)) {
volume <- paste0(gsub(",", "", volume), "(", issue, "),")
}
if(!is.null(doi) & !is.null(url)) {
doi <- paste0("[doi: ", doi, "](", url, ")")
}
if(!is.null(pages)) {
if(!is.null(book)) {
pages <- paste0("(pp. ", pages, ").")
}
else {
pages <- paste0(pages,".")
}
}
if(!is.null(book)) {
book <- paste0("*", book, "*")
}
if(!is.null(conference)) {
title <- paste0("*", title, "*")
if(is.null(poster)) {
if(annual_meeting) {
conference <- paste0("Presentation at the annual ", conference, ".")
}
else {
conference <- paste0("Presentation at the ", conference, ".")
}
}
else if(poster) {
if(annual_meeting) {
conference <- paste0("Poster presented at the annual meeting of the ",
conference,
", ",
conf_loc,
".")
}
else {
conference <- paste0("Poster presented at the ",
conference,
", ",
conf_loc,
".")
}
}
else {
if(annual_meeting) {
conference <- paste0("Paper presented at the annual meeting of the ",
conference,
", ",
conf_loc,
".")
}
else {
conference <- paste0("Paper presented at the ",
conference,
",",
conf_loc,
".")
}
}
}
if(!is.null(version)) {
version <- paste0("R package version ", version, ".")
}
authors <- gsub(
"Anderson, D\\.?",
"<span style= 'font-weight: 500'>Anderson, D.</span>",
authors)
paste(authors,
paste0("(", year, ")."),
paste0(title, "."),
version,
conference,
journal,
volume,
book,
pages,
doi,
place_published)
}
prpas <- pubs %>%
filter(type == "prpa") %>%
select(-type)
each_cite <- split(prpas, seq_len(nrow(prpas)))
empties <- map(each_cite, ~map_lgl(.x, is.na))
cites <- map2(each_cite, empties, ~.x[ ,!.y])
formatted_cites <- map(cites, ~do.call(make_cite, .x))
fa_doc <- ifelse(
!is.na(prpas$full_paper_link),
paste0('[<i class="fas falink2 fa-file-alt"></i>](',
prpas$full_paper_link,
")"
),
""
)
fa_git <- ifelse(
!is.na(prpas$git_repo),
paste0('[<i class="fab falink2 fa-github"></i>](',
prpas$git_repo,
")"
),
""
)
pubs_tbl <- tibble(year = prpas$year,
count = paste0(seq(length(formatted_cites), 1), "."),
cites = paste(unlist(formatted_cites), fa_doc, fa_git))
pubs_tbl <- pubs_tbl %>%
group_by(year) %>%
mutate(count_within_year = 1:n()) %>%
ungroup() %>%
mutate(year = ifelse(count_within_year == 1, year, "")) %>%
select(-count_within_year)
View(pubs_tbl)
View(pubs_tbl)
pubs_tbl <- dplyr::select(pubs_tbl, year, cites)
View(pubs_tbl)
View(pubs_tbl)
chapters <- pubs %>%
filter(type == "book-chapter") %>%
select(-type)
each_cite <- split(chapters, seq_len(nrow(chapters)))
empties <- map(each_cite, ~map_lgl(.x, is.na))
cites <- map2(each_cite, empties, ~.x[ ,!.y])
formatted_cites <- map(cites, ~do.call(make_cite, .x))
chapters_tbl <- tibble(count = paste0(seq(length(formatted_cites), 1), "."),
cites = unlist(formatted_cites))
kable(chapters_tbl)
pagedown::chrome_print()
blogdown:::serve_site()
pagedown::chrome_print(bruno-cv.html)
pagedown::chrome_print("bruno-cv.html")
pagedown::chrome_print("index.html")
pagedown::chrome_print("index.html")
pagedown::chrome_print("bruno-cv.html")
pagedown::chrome_print(index.html)
pagedown::chrome_print("index.html")
xaringan::decktape(index.html, cv.pdf)
xaringan::decktape("./index.html", cv.pdf)
xaringan::decktape("./index.html", "./cv.pdf")
xaringan::decktape("./index.Rmd", "./cv.pdf")
pagedown::chrome_print()
pagedown::chrome_print(index.html)
pagedown::chrome_print(./index.html)
pagedown::chrome_print("./index.html")
library(tidyverse)
library(lubridate)
library(knitr)
opts_chunk$set(echo = FALSE)
options(knitr.kable.NA = '')
#### cv entries #####
cv_entries <- readxl::read_xlsx(here::here("data", "cv_entries.xlsx"))
#### publications #####
pubs <- readxl::read_xlsx(here::here("data", "pubs.xlsx")) %>%
arrange(order) %>%
select(-order)
pubs <- map_df(pubs, ~gsub("\\.$", "", .x))
```{r Table1, echo=FALSE, message=FALSE, warning=FALSE}
```{r}
install.packages(c("AsioHeaders", "crosstalk", "digest", "dplyr", "ggplotify", "ggraph", "glue", "igraph", "matrixStats", "pagedown", "quantmod", "Rcpp", "rcrossref", "rlang", "roxygen2", "shiny", "vctrs"))
install.packages(c("AsioHeaders", "crosstalk", "digest", "dplyr", "ggplotify", "ggraph", "glue", "igraph", "matrixStats", "pagedown", "quantmod", "Rcpp", "rcrossref", "rlang", "roxygen2", "shiny", "vctrs"))
install.packages(c("digest", "dplyr", "ggraph", "glue", "igraph", "Rcpp", "rlang"))
install.packages(c("digest", "dplyr", "ggraph", "glue", "igraph", "Rcpp", "rlang"))
install.packages(c("digest", "dplyr", "ggraph", "glue", "igraph", "Rcpp", "rlang"))
install.packages(c("digest", "dplyr", "ggraph", "glue", "igraph", "Rcpp", "rlang"))
install.packages(c("digest", "dplyr", "ggraph", "glue", "igraph", "Rcpp", "rlang"))
install.packages(c("digest", "dplyr", "ggraph", "glue", "igraph", "Rcpp", "rlang"))
install.packages("igraph")
library(tidyverse)
library(lubridate)
library(knitr)
opts_chunk$set(echo = FALSE)
options(knitr.kable.NA = '')
#### cv entries #####
cv_entries <- readxl::read_xlsx(here::here("data", "cv_entries.xlsx"))
#### publications #####
pubs <- readxl::read_xlsx(here::here("data", "pubs.xlsx")) %>%
arrange(order) %>%
select(-order)
pubs <- map_df(pubs, ~gsub("\\.$", "", .x))
require(knitr)
df <- data.frame(Variables = c("CT", "ER", "IRD", "VIX", "SM", "SMUS"),
Text_1 = c("Ratio of short positions over long positions (Short/Long)",
"Nominal exchange rates, USDCHF", "Difference between the policy interest rate in
Switzerland and the policy interest rate in the United States", "Market sentiment, CBOE
DJIA Volatility Index", "Swiss Market Index, ^SSMI (Swiss stock market)", "S&P 500,
^GSPC (US stock market)"),
Text_2 = c("CFTC", "BIS", "BIS", "FRED", "Yahoo Finance", "Yahoo Finance"))
knitr::kable(df, col.names = c("Variable", "Definition", "Source"))
View(df)
pagedown::chrome_print()
pagedown::chrome_print(index.html)
pagedown::chrome_print("index.html")
pagedown::chrome_print("index.html")
pagedown::chrome_print("bttomio-cv.html")
library(tidyverse)
library(lubridate)
library(knitr)
opts_chunk$set(echo = FALSE)
options(knitr.kable.NA = '')
#### cv entries #####
cv_entries <- readxl::read_xlsx(here::here("data", "cv_entries.xlsx"))
#### publications #####
pubs <- readxl::read_xlsx(here::here("data", "pubs.xlsx")) %>%
arrange(order) %>%
select(-order)
pubs <- map_df(pubs, ~gsub("\\.$", "", .x))
reviewer <- cv_entries %>%
filter(type == "peer-reviewer") %>%
select(what)
jou1 <- reviewer$what
pagedown::chrome_print()
pagedown::chrome_print(index.html)
pagedown::chrome_print("index.html")
pagedown::chrome_print("List-of-publications.html")
